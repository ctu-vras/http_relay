.TH HTTP\-RELAY "1" "2023\-08\-17" "http\-relay" "Generated Python Manual"
.SH NAME
http\-relay
.SH SYNOPSIS
.B http\-relay
[-h] [-n NUM_THREADS] [-b BUFFER_SIZE] [-t SIGKILL_TIMEOUT] [-s] host [port] [local_port] [local_addr]
.SH DESCRIPTION
Relay HTTP requests from localhost to a remote host (act as reverse HTTP proxy).

.TP
\fBhost\fR
The remote host to connect to (e.g. "cvut.cz")

.TP
\fBport\fR
The remote host's port to connect to (e.g. 80).

.TP
\fBlocal_port\fR
The local port to be used for the relay. If left out, will be the same as
remote port.

.TP
\fBlocal_addr\fR
Local interface (IP or hostname) to run the relay on. By default, it runs on
all IPv4 interfaces (0.0.0.0).

.SH OPTIONS
.TP
\fB\-n\fR \fI\,NUM_THREADS\/\fR, \fB\-\-num\-threads\fR \fI\,NUM_THREADS\/\fR
Number of threads servicing the incoming requests.

.TP
\fB\-b\fR \fI\,BUFFER_SIZE\/\fR, \fB\-\-buffer\-size\fR \fI\,BUFFER_SIZE\/\fR
Size of the buffer used for reading responses. Generally, a larger buffer
should be more efficient, but if it is too large, the local clients may time
out before they receive any data.

.TP
\fB\-t\fR \fI\,SIGKILL_TIMEOUT\/\fR, \fB\-\-sigkill\-timeout\fR \fI\,SIGKILL_TIMEOUT\/\fR
If specified, the relay will be sigkilled in this number of seconds.

.TP
\fB\-s\fR, \fB\-\-sigkill\-on\-stream\-stop\fR
If True, \-\-sigkill\-timeout will not be counted when no requests are active,
and during requests, each successful data transmission will reset the timeout.
This can be used to detect stale streams if you expect an application to be
constantly receiving data.

.SH DISTRIBUTION
The latest version of http\-relay may be downloaded from
.UR https://github.com/ctu\-vras/http_relay
.UE
